{"version":3,"file":"static/js/506.8d7e7bfa.chunk.js","mappings":"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","sources":["redux/selector.js","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/Pages/PhoneBook.module.css?e3d5","Pages/PhoneBook.jsx"],"sourcesContent":["export const filterSelector = (state=>state.contactReducer.filter)\nexport const contactsSelector = (state=>state.contactReducer.contact);\nexport const isLoadingSelector = (state=>state.contactReducer.isLoading)\nexport const errorSelector = (state=>state.contactReducer.errorContact)\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form__container\":\"Form_form__container__0Ze0A\",\"input\":\"Form_input__FTtTw\",\"label\":\"Form_label__8nx+5\",\"label__form\":\"Form_label__form__wlLL9\"};","import { useDispatch, useSelector} from \"react-redux\";\n\nimport { contactsSelector } from \"redux/selector\";\nimport css from '../Form/Form.module.css'\nimport { addContact } from \"redux/operations\";\n\nexport default function Form() {\n\n  const dispatch = useDispatch();\n  const contact = useSelector(contactsSelector);\n\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    const form = e.target;\n    if (contact.some(element => element.name.toLowerCase() === form.elements.name.value.toLowerCase())) {\n        alert(`is already in contacts`);\n    } else {\n        const newUser = {\n        name: form.elements.name.value, \n        number: form.elements.phone.value\n       }\n       console.log(newUser)\n       dispatch(addContact(newUser));\n       }\n    form.reset();\n  }\n  \n  return (<form className={css.form__container} onSubmit={handleSubmit}>\n    <label htmlFor=\"\" className={css.label}><span className={css.label__form}>Name</span> \n    <input className={css.input}\n           type=\"text\"\n           name=\"name\"\n           pattern=\"^[a-zA-Zа-яА-Я]+$\"\n           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n           required/></label>\n    <label htmlFor=\"\" className={css.label}><span className={css.label__form}>Number</span>\n    <input className={css.input}\n            type=\"tel\"\n            name=\"phone\"\n            // pattern=\"^[0-9]+$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required/></label>\n    <button type=\"submit\">Add contact</button>\n  </form>)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__j+P5X\",\"item__text\":\"Contact_item__text__VBMiH\"};","import { useDispatch} from \"react-redux\";\n\nimport css from '../Contact/Contact.module.css';\nimport { deleteContact } from \"redux/operations\";\n\nexport default function Contact({id,name, number}) {\n  const dispatch = useDispatch();\n    \n  const handleDelete = () => dispatch(deleteContact(id));\n    \n    return (<li className={css.item} key={id}> <span className={css.item__text}>{name}: {number}</span>\n               <button type='button' onClick={handleDelete}>delete</button></li>)\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from \"react-redux\";\nimport { contactsSelector, filterSelector } from \"redux/selector\";\nimport Contact from \"components/Contact/Contact\";\nimport PropTypes from 'prop-types';\nimport css from '../ContactList/ContactList.module.css'\n\nexport default function ContactList() {\n  const filtered = useSelector(filterSelector)\n  const contact = useSelector(contactsSelector);\n  \n  const filteredContacts=contact.filter(el=>el.name.toLowerCase().includes(filtered.toLowerCase()))\n  \n  return (<ul className={css.list}>\n             {filteredContacts.map(element => <Contact key={element.id}\n                id={element.id}\n                name={element.name}\n                number={element.number} /> )}\n           </ul>)\n}\n\nContactList.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n  }\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\"};","import { useDispatch } from 'react-redux';\nimport { visibleContact } from 'redux/contactSlice';\n\nimport css from '../Filter/Filter.module.css';\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n    const handleFilter = (event)=> {dispatch(visibleContact(event.target.value))}\n\n    return( <>\n            <label htmlFor=\"\" className={css.label}>Find contact by name </label>\n            <input type=\"text\" className={css.input}\n                name=\"filter\"\n                onChange={handleFilter}\n                />\n        </>   \n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"PhoneBook_subtitle__0-HXQ\",\"container\":\"PhoneBook_container__sB43n\",\"title\":\"PhoneBook_title__4HJiP\"};","import React, { useEffect } from \"react\";\nimport Form from \"../components/Form/Form\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport Filter from \"../components/Filter/Filter\";\nimport css from '../Pages/PhoneBook.module.css'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsSelector, errorSelector, isLoadingSelector } from \"redux/selector\";\nimport { fetchContacts } from \"redux/operations\";\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  const contact = useSelector(contactsSelector);\n  const isLoading = useSelector(isLoadingSelector);\n  const error = useSelector(errorSelector); \n\n\n  useEffect(()=>{\n    dispatch(fetchContacts())\n  },[dispatch])\n\n  return (<div className={css.container}>\n    <h1 className={css.title}> PhoneBook</h1>\n    <Form  /> \n    <h2 className={css.title}>Contacts</h2>\n    {isLoading && <p>Loading tasks...</p>}\n    {error && <p>{error}</p>}\n    <Filter  />\n    {contact !== [] &&  <ContactList /> }\n    </div>)\n}\n"],"names":["filterSelector","state","contactReducer","filter","contactsSelector","contact","isLoadingSelector","isLoading","errorSelector","errorContact","Form","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","form","target","some","element","name","toLowerCase","elements","value","alert","newUser","number","phone","console","log","addContact","reset","htmlFor","type","pattern","title","required","Contact","id","onClick","deleteContact","ContactList","filtered","filteredContacts","el","includes","map","Filter","onChange","event","visibleContact","PhoneBook","error","useEffect","fetchContacts"],"sourceRoot":""}